spring:
  kafka:
    bootstrap-servers: http://localhost:9092
    security:
      protocol: PLAINTEXT
    properties:
      schema.registry.url: http://localhost:8085
      specific.avro.reader: true
      #spring.deserializer.key.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
      #spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
    consumer:
      group-id: kafka-demo
      key-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        spring.json.trusted.packages: "com.example.kafkademo.*"
      #key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      #value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      #max-poll-records: 100
      #auto-offset-reset: earliest
    producer:
      key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

base-url: http://localhost:8383

server:
  port: 8090
